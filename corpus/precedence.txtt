====
Not & And
====

-a ^ b
a ^ -b

---

(block
  (expression
    (and
      (not (variable))
      (variable)))
  (expression
    (and
      (variable)
      (not (variable)))))


====
And & Or
====

a ^ b _ c
a _ b ^ c

a ^ b _ c ^ d
a _ b ^ c _ d

---

(block
  (expression
    (or
      (and (variable) (variable))
      (variable)))
  (expression
    (or
      (variable)
      (and (variable) (variable))))
  (expression
    (or
      (and (variable) (variable))
      (and (variable) (variable))))
  (expression
    (or
      (or
        (variable)
        (and (variable) (variable)))
      (variable))))


====
Or & Implies
====

a _ b -> c
a -> b _ c

a _ b -> c _ d
a -> b _ c -> d

---

(block
  (expression
    (implies
      (or (variable) (variable))
      (variable)))
  (expression
    (implies
      (variable)
      (or (variable) (variable))))
  (expression
    (implies
      (or (variable) (variable))
      (or (variable) (variable))))
  (expression
    (implies
      (variable)
      (implies
        (or (variable) (variable))
        (variable)))))


====
Implies & Iff
====

a -> b <-> c
a <-> b -> c

a -> b <-> c -> d
a <-> b -> c <-> d

---

(block
  (expression
    (iff
      (implies (variable) (variable))
      (variable)))
  (expression
    (iff
      (variable)
      (implies (variable) (variable))))
  (expression
    (iff
      (implies (variable) (variable))
      (implies (variable) (variable))))
  (expression
    (iff
      (variable)
      (iff
        (implies (variable) (variable))
        (variable)))))


====
Iff & Forall
====

a <-> A x . P(x)
A x . P(x) <-> a

---

(block
  (expression
    (iff
      (variable)
      (forall
        (variable)
        (function (function_name) (variable)))))
  (expression
    (forall
      (variable)
      (iff
        (function
          (function_name)
          (variable))
        (variable)))))
